"""
Crearem una funció amb el nom new_nif(). Que rebrà un paràmetre opcional amb valor per defecte, new=”yes”.
D'aquesta manera podrem distingir si el nif ens servirà per crear un client nou o per buscar un nif ja creat.

En cridar a aquesta funció, ens demanarà un NIF per consola i en cas que el NIF sigui correcte,
ens tornarà aquest NIF amb la lletra en majúscula.

Aquesta funció llançarà excepcions del tipus ValueError en el cas que:
• El NIF no tingui un format adequat (8 números i una lletra).
• La lletra del NIF no sigui correcta
• El NIF ja existeix al diccionari dict_clients i el valor del paràmetre new sigui “yes”.

I ens mostrarà un missatge descriptiu de l’error corresponent, tornant a demanar un NIF a l'usuari.
El missatge d'error ens indicarà en tots els casos què no és correcte al NIF introduït,
no s'acceptarà un missatge genèric per a tots els casos.
"""

dict_clientes = {"34343434H": {"nombre": "Jason Statham", "telefono": "666994455"},
 "78787878K": {"nombre": "Dwayne Johnson", "telefono": "666765432"},
 "39292939S": {"nombre": "Federico Luppi", "telefono": "666232211"},
 "53423454C": {"nombre": "Lorenzo Lamas", "telefono": "666987578"},
 "87654334T": {"nombre": "Charlize Theron", "telefono": "555443322"},
 "92837467Z": {"nombre": "Linda Hamilton", "telefono": "555443322"},
 "26548734H": {"nombre": "Scarlett Johansson", "telefono": "555443322"},
 "99837653N": {"nombre": "Uma Thurman", "telefono": "555443322"}
 }

letrasNIF = ["T", "R", "W", "A", "G", "M", "Y", "F", "P", "D", "X", "B", "N", "J", "Z", "S", "Q", "V", "H", "L", "C", "K", "E"]

def new_nif(new):
    try:
        if new == "yes":
            nif = input("Enter new NIF: ")
            if nif in les_meves_funcions.dades.dict_clientes.keys():
                raise ValueError("NIF {} alredy exists".format(nif))
            elif not len(nif) == 9:
                raise ValueError("Incorrect lenght")
            elif not nif[8].isalpha():
                raise ValueError("DNI has to end with a letter")
            elif not nif[:8].isdigit():
                raise ValueError("The first 8 characters of DNI are numbers")
            elif not (nif[8] == les_meves_funcions.dades.letrasNIF[int(nif[:8]) % 23]):
                raise ValueError("Incorrect DNI letter")
            else:
                print(nif)
        elif new == "no":
            nif = input("NIF to find: ")
            if nif not in les_meves_funcions.dades.dict_clientes.keys():
                raise ValueError("There is not customer with dni {}".format(nif))
            elif not len(nif) == 9:
                raise ValueError("Incorrect lenght")
            elif not nif[8].isalpha():
                raise ValueError("DNI has to end with a letter")
            elif not nif[:8].isdigit():
                raise ValueError("The first 8 characters of DNI are numbers")
            elif not (nif[8] == les_meves_funcions.dades.letrasNIF[int(nif[:8]) % 23]):
                raise ValueError("Incorrect DNI letter")
            else:
                print(nif)
    except ValueError as e:
        print(e)
        new_nif(new)
new_nif("yes")
